var token = '[MANAGEMENT_API_TOKEN]'
var ManagementClient = require('auth0').ManagementClient
var clientId = '[CLIENT_ID]'

// load nysdot users
var users = require('./users_20160525.json')

for (let i = 0; i < users.length; i++) {
  console.log(users[i].email + '\t\t\t\t' + users[i].autogenerated)
}

var management = new ManagementClient({
  token: token,
  domain: 'conveyal.eu.auth0.com'
})

module.exports.updateOldUser = (user, datatools) => {
  if ('permissions' in datatools) {
    console.log(user.email)
    var metadata = {
      datatools: {}
    }
    metadata.datatools[clientId] = datatools
    management
      .users
      .updateAppMetadata({ id: user.user_id }, metadata)
      .then(user => {
        console.log(user)
      })
  }
}

module.exports.addClientId = (user, datatools) => {
  if ('client_id' in datatools) {
    console.log(user.email)

    var metadata = {
      datatools: [datatools]
    }
    console.log(metadata)
    management
      .users
      .updateAppMetadata({ id: user.user_id }, metadata)
      .then(user => {
        console.log(user)
      })
  }
}

module.exports.createNewUser = (userData) => {
  management
    .users
    .create(userData)
    .then(user => {
      console.log('User created for ' + user.email)
    })
    .catch(function (err) {
      console.log(err)
      // Handle error.
    })
}

var convertUserData = (user) => {
  // skip if no email found
  if (!user.email) {
    return null
  }
  var permissions = []
  var projects = []
  if (user.admin) {
    permissions.push({type: 'administer-application'})
  } else if (user.projectPermissions) {
    var feedList = user.projectPermissions.map(f => f.project_id)
    projects.push({
      project_id: '8a6c4e0f-8c70-444e-95b8-6abeb9793d47',
      permissions: [
        {
          type: 'view-feed',
          feeds: ['*']
        },
        {
          type: 'manage-feed'
        },
        {
          type: 'edit-gtfs'
        }
      ],
      defaultFeeds: feedList
    })
  }
  var userData = {
    email: user.email,
    connection: 'Username-Password-Authentication',
    password: '[DEFAULT-PASSWORD]',
    app_metadata: {
      datatools: [
        {
          client_id: clientId,
          permissions: permissions,
          projects: projects,
          subscriptions: []
        }
      ]
    }
  }
  return userData
}
// create new users for NYSDOT
for (let i = 0; i < users.length; i++) {
  var userData = convertUserData(users[i])
  console.log(userData)

  if (userData) {
    console.log(userData.app_metadata)
    // createNewUser(userData)
  }
}
// update old auth0 users
// management
//   .users
//   .getAll()
//   .then(users => {
//     for (var i = 0; i < users.length; i++) {
//       var user = users[i]
//       var datatools
//       if (!user.app_metadata)
//         continue
//       // filter out only those users of datatools
//       if (typeof user.app_metadata === 'object' && 'datatools' in user.app_metadata)
//         datatools = user.app_metadata.datatools
//       else {
//         continue
//       }
//       // updates users without the client_id: datatoolsObject map
//       // updateOldUser(user, datatools)
//       // addClientId(user, datatools)
//     }
//   })
//   .catch(function (err) {
//     console.log(err)
//     // Handle error.
//   })
